services:

  # Mount the Traefik configuration and certs.
  traefik:
    image: ${TRAEFIK_IMAGE}-${EXTERNAL_IMAGE_TAG_SUFFIX}
    volumes:
      - ./docker/traefik:C:/etc/traefik

  # Mount our SQL data folder and use our custom image with the Headless Services (JSS)
  # module data added. See Dockerfile for details.
  mssql:
    volumes:
      - type: bind
        source: .\docker\data\sql
        target: c:\data

  # Mount our Solr data folder and use our retagged Solr image.
  # Some modules (like SXA) also require additions to the Solr image.
  solr:
    volumes:
      - type: bind
        source: .\docker\data\solr
        target: c:\data

  # Container used to run the ASP.NET Core Starter application.
  aspnet-core-starter:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-aspnet-core-starter:${VERSION:-latest}
    build:
      context: ../
      dockerfile: ./local-containers/docker/build/aspnet-core-starter/Dockerfile
      args:
        BASE_IMAGE: ${NETCORE_BUILD_IMAGE}-${EXTERNAL_IMAGE_TAG_SUFFIX}
        PROJECT_FILE: ./headapps/aspnet-core-starter/aspnet-core-starter.csproj
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_URLS: "http://*:80"
      DOTNET_WATCH_RESTART_ON_RUDE_EDIT: true
      DOTNET_WATCH_SUPPRESS_LAUNCH_BROWSER: true
      MVP_RENDERING_EDITING_HOST_URI: "http://aspnet-core-starter"
      Sitecore__EnableEditingMode: "true" 
      Sitecore__EnableLocalContainer: "true"
      Sitecore__LocalContainerLayoutUri: "http://cm/sitecore/api/graph/edge"
      Sitecore__EdgeContextId: ${SITECORE_API_KEY_ASPNETCORE_STARTER}
      Sitecore__EditingSecret: ${EDITING_SECRET}
      Sitecore__DefaultSiteName: ${SITE_NAME}
    ports:
      - "80:80"
    command: ["dotnet", "watch", "run", -v, "--urls", "http://*:80"]
    volumes:
      - .\..\headapps\aspnet-core-starter:c:\app
      - c:\app\obj
      - c:\app\bin
    depends_on:
      - cm
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.aspnet-core-starter-secure.entrypoints=websecure"
      - "traefik.http.routers.aspnet-core-starter-secure.rule=Host(`${RENDERING_HOST}`)"
      - "traefik.http.routers.aspnet-core-starter-secure.tls=true"   

  # Use our custom CM image with added modules and solution code.
  # Folders are mounted below for code deployment and log output. See Dockerfile for details.
  # Configure for a mounted license file instead of using SITECORE_LICENSE.
  cm:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-xmcloud-cm:${VERSION:-latest}
    build:
      context: ./docker/build/cm
      args:
        PARENT_IMAGE: ${SITECORE_DOCKER_REGISTRY}sitecore-xmcloud-cm:${SITECORE_VERSION}
        TOOLS_IMAGE: ${TOOLS_IMAGE}:${SITECORE_VERSION}
    volumes:
      - ${LOCAL_DEPLOY_PATH}\platform:C:\deploy
      - ${LOCAL_DATA_PATH}\cm:C:\inetpub\wwwroot\App_Data\logs
      - ${HOST_LICENSE_FOLDER}:c:\license
    environment:
      SITECORE_LICENSE_LOCATION: c:\license\license.xml
      RENDERING_HOST_INTERNAL_URI: ${RENDERING_HOST_INTERNAL_URI}
      JSS_DEPLOYMENT_SECRET_ASPNETCORE: ${JSS_DEPLOYMENT_SECRET_ASPNETCORE_STARTER}
      SITECORE_JSS_EDITING_SECRET: ${EDITING_SECRET}
      SITECORE_EDITING_HOST_PUBLIC_HOST: "${RENDERING_HOST}"
      SITECORE_GraphQL_CORS: ${SITECORE_GRAPHQL_CORS}
      SITECORE_Pages_Client_Host: ${SITECORE_Pages_Client_Host}
      SITECORE_Pages_CORS_Allowed_Origins: ${SITECORE_Pages_CORS_Allowed_Origins}
      ## Development Environment Optimizations
      SITECORE_DEVELOPMENT_PATCHES: DevEnvOn,CustomErrorsOff,DebugOn,DiagnosticsOff,InitMessagesOff
      Sitecore_AppSettings_exmEnabled:define: "no" # remove to turn on EXM
    entrypoint: powershell -Command "& C:/tools/entrypoints/iis/XmCloudDevelopment.ps1"
